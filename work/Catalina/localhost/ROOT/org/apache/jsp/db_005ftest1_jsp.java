/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.10
 * Generated at: 2018-12-26 03:26:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import javax.naming.*;
import javax.sql.DataSource;

public final class db_005ftest1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.naming");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.sql.DataSource");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=en>\r\n");
      out.write("<head>\r\n");
      out.write("   <meta charset=\"utf-8\">\r\n");
      out.write("   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"../assets/css/main.css\" />\r\n");
      out.write("\t\t<noscript><link rel=\"stylesheet\" href=\"../assets/css/noscript.css\" /></noscript>\r\n");
      out.write("     <title>商品網頁</title>\r\n");
      out.write("\t <style>\r\n");
      out.write("    \r\n");
      out.write("    </style>    \t \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<body class=\"landing is-preload\">\r\n");
      out.write("\r\n");
      out.write("  <div id=\"page-wrapper\">\r\n");
      out.write(" <div id=\"page-wrapper\"/>\r\n");
      out.write("\t\t\t\t\t<header id=\"header\" class=\"alt\">\r\n");
      out.write("\t\t\t\t\t\t<h1><a href=\"index.html\">**購物系統</a></h1>\r\n");
      out.write("\t\t\t\t\t\t<nav id=\"nav\">\r\n");
      out.write("\t\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li class=\"special\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<a href=\"#menu\" class=\"menuToggle\"><span>Menu</span></a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div id=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"index1.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"cartcart.jsp \">購物車</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"#\">訂單資訊</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li><a href=\"product/mainmenu.jsp\">商品維護</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<FORM id=\"form\" name=\"form\" method=\"post\" action=\"index2.jsp\" >\r\n");
      out.write("<fieldset ><legend >會 員 登 入</legend></li>\r\n");

String no=(String)application.getAttribute("no");
application.setAttribute("loginok","");
application.setAttribute("perror","");
application.setAttribute("pok","");
try{ 
      if(no.equals(""))
	  response.sendRedirect("index.jsp");
	  request.setCharacterEncoding("utf-8");
      Context initContext = new InitialContext();
      Context context = (Context) initContext.lookup("java:comp/env");
      DataSource ds = (DataSource) context.lookup("jdbc/my");
      // 取得資料庫連結和Statement物件
      Connection dbCon = ds.getConnection(); 
      Statement ptmt = dbCon.createStatement(); 
	  String sSQL = "Select M_name From member Where '"+no+"'=M_no";
	  ResultSet ps = ptmt.executeQuery(sSQL);
	  ps.next();
	  out.print("會員: "+ps.getString("M_name")+" 您好!!");
      out.print("");
	  ptmt.close();   // 關閉Statement物件
      dbCon.close();  // 關閉連結
    }
    catch(Exception e) {
      out.print(e);   
    }                     

      out.write("\r\n");
      out.write("\r\n");
      out.write("</p>\r\n");
      out.write("<br></br>\r\n");
      out.write("<input type='button' name='button' id='button' value=\"登出\" onclick=\"location.href='../index.jsp'\" /></a>\r\n");
      out.write("<br></br>\r\n");
      out.write("\t</fieldset>\r\n");
      out.write("\t<h1 class=\"errmsg\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginerror}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t</nav>\r\n");
      out.write("\t\t\t\t\t</header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("<left>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<hr color=black>\r\n");
      out.write("<body bgcolor=blanchedalmond link=burlywood>\r\n");
      out.write("\r\n");
      out.write(" ");

    request.setCharacterEncoding("utf-8");
    String val = (String)request.getParameter("data");
    

    Object info= request.getParameter("keyword");
    String infoStr= (String)info;
  
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<caption>商品詳細資料</caption>\r\n");
 
try
{
//讀取mysqlDriver驅動程式
//Class.forName("com.mysql.jdbc.Driver").newInstance();


try
{
//String sDriver = "com.mysql.jdbc.Driver";
//      String user     = "root";
//      String password = "123456";
//      String url      = "jdbc:mysql://localhost:3306/mydb?serverTimezone=UTC";//&amp;useUnicode=true&characterEncoding=utf8
//Connection conn= DriverManager.getConnection(url,user,password);
Context initContext = new InitialContext();
      Context context = (Context) initContext.lookup("java:comp/env");
      DataSource ds = (DataSource) context.lookup("jdbc/my");
      // 取得資料庫連結和Statement物件
      Connection conn = ds.getConnection();
try
{
//建立statement
Statement stmt = conn.createStatement();
try
{
//建立SQL查詢
String sql="select P_NO,p.P_NAME,P_NUMBER,P_PRICE,T_NAME,P_PICTURE,P_FEATURES from product p,type t where P_NO in("+infoStr+") and (p.T_NO=t.T_NO)"; 
ResultSet rs = stmt.executeQuery(sql);


      out.write("\r\n");
      out.write("<center>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

//顯示資料List<Book> list=new ArrayList<Book>();  
 String pno;
while(rs.next())
{   pno=rs.getString("P_NO");
application.setAttribute("P_NO", pno);

      out.write("\t<table width=\"1000\" height=\"450\" rules=\"all\" style=\"border:3px #FFD382 dashed;\" cellpadding=\"10\" border='1'>\r\n");
      out.write("        <tr>\r\n");
      out.write("　      <td rowspan=\"6\"><img src=\"");
      out.print(rs.getString("P_PICTURE"));
      out.write("\" style=\"float: left;\" align=\"left\" hspace=\"8px\" vspace=\"5px\" height=\"400\" width=\"500\">        \r\n");
      out.write("        </td>\r\n");
      out.write("\t\t<td width=\"50\">名稱</td>\r\n");
      out.write("　      <td>");
      out.print(rs.getString("P_NAME"));
      out.write("</td>\r\n");
      out.write("　      </tr>\r\n");
      out.write("　      <tr>\r\n");
      out.write("\t\t<td>單價</td>\r\n");
      out.write("　      <td>");
      out.print(rs.getString("P_PRICE"));
      out.write("</td>\r\n");
      out.write("　      </tr>\r\n");
      out.write("　      <tr>\r\n");
      out.write("\t\t<td>現有數量</td>\r\n");
      out.write("　      <td>");
      out.print(rs.getString("P_NUMBER"));
      out.write("</td>\r\n");
      out.write("　      </tr>\r\n");
      out.write("　      <tr>\r\n");
      out.write("\t\t<td>種類</td>\r\n");
      out.write("　      <td>");
      out.print(rs.getString("T_NAME"));
      out.write("</td>\r\n");
      out.write("　      </tr>\r\n");
      out.write("　      <tr>\r\n");
      out.write("\t\t<td rowspan=\"2\">說明</td>\r\n");
      out.write("　      <td rowspan=\"2\">");
      out.print(rs.getString("P_FEATURES"));
      out.write("</td>\r\n");
      out.write("　      </tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t \r\n");
      out.write("\r\n");
 
}        

      out.write("\r\n");
      out.write("</center>\r\n");
      out.write("<br>  ");
String db=(String)request.getParameter("keyword");
      out.write("\r\n");
      out.write("<center>\r\n");
      out.write("   <form name=\"db1\" id=\"db1\" method=\"post\" action=\"cartcart.jsp\">\r\n");
      out.write("   <input type=\"text\" name=\"button1\" id=\"button1\" value=\"");
      out.print(db);
      out.write("\" style=\"display:none;\">\r\n");
      out.write("<p><input type=\"submit\" src=\"images/加入購物車.png\"  height=\"\" width=\"200\" value=\"加入購物車\">\r\n");
      out.write("   <input type=\"image\" src=\"images/直接購買.png\" width=\"200\"></p>\r\n");
      out.write("    </form> \r\n");
      out.write("</center>\r\n");

// 關閉連線
rs.close();
rs = null;
stmt.close();
stmt = null;
conn.close();


}
catch (Exception ex)
{
out.println("can't read data");
out.println(ex.toString());
}
}
catch (Exception e)
{
out.println("can't create statement");
out.println(e.toString());
}
}
catch(Exception e)
{
out.println("can't content mysql database");
out.println(e.toString());
}

}
catch(Exception e)
{
out.println("can't load mysql driver");
out.println(e.toString());
}


      out.write("\r\n");
      out.write("\r\n");
      out.write("<center>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<a href=http://localhost:8080/homepage1220.jsp ><b>⊙返回首頁⊙</b></a>\r\n");
      out.write("</center>\r\n");
      out.write("<script src=\"../assets/js/jquery.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"../assets/js/jquery.scrollex.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"../assets/js/jquery.scrolly.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"../assets/js/browser.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"../assets/js/breakpoints.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"../assets/js/util.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"../assets/js/main.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
